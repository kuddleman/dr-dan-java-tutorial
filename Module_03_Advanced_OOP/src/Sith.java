/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Hello World with Dr. Dan - A Complete Introduction to Programming from Java to C++ (Code and Course © Dan Grissom)
//
// Additional Lesson Resources from Dr. Dan:
//		High-Quality Video Tutorials: www.helloDrDan.com
//		Free Commented Code: https://github.com/DanGrissom/hello-world-dr-dan-java
//
// Lesson Note:
// 		This class is consumed by Lesson_02_StarWarsUniverseClient_Advanced_OOP.
//		This class encapsulates the Sith, which describes unique Sith properties and methods not applicable to the
// 		ForceUser class (which it inherits methods/variables from).	
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
public class Sith {

	///////////////////////////////////////////////////////////////
	// Instance variables
	///////////////////////////////////////////////////////////////

	///////////////////////////////////////////////////////////////
	// Default Constructor
	//		Parameters:
	//			NONE
	///////////////////////////////////////////////////////////////

	///////////////////////////////////////////////////////////////
	// Overloaded Constructor
	//		Parameters:
	//			pName - A String representing the Sith's name
	//			pHomeWorld - A String representing the Sith's homeworld
	//			pAttack - A String representing the Sith's default attack
	//			pDefense - A String representing the Sith's default defense
	//			pForceRageRank - An int representing the Sith's rage rank
	///////////////////////////////////////////////////////////////

	///////////////////////////////////////////////////////////////
	// Getters
	///////////////////////////////////////////////////////////////

	///////////////////////////////////////////////////////////////
	// Setters
	///////////////////////////////////////////////////////////////

	///////////////////////////////////////////////////////////////
	// This method provides an implementation for forceAttack
	// (defined in the interface); the method describes the attack,
	// generates an outcome using the simulateForceBattle() method
	// (for force battles) and then describes the result (who won).
	// Sith fights differently depending on enemy.
	//		Parameters:
	//			enemy - A Humanoid instance to fight
	//		Returns:
	//			A String representing a narrative/story of the fight
	///////////////////////////////////////////////////////////////
}
